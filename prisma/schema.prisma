generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  /// PK
  idUser     Int       @id @default(autoincrement()) @map("idUser")

  /// credentials & profil
  email      String    @unique @map("email")
  password   String    @map("password")            // simpan bcrypt hash
  name       String?   @map("name")

  /// audit
  createdAt  DateTime  @default(now()) @map("createdAt")

  /// relations
  transactions Transaction[]
  budgets      Budget[]
  notifications Notification[]
  categories    Category[]     @relation("UserCategories")
  reports       Report[]

  @@map("User")
}

model Category {
  idCategory  Int      @id @default(autoincrement()) @map("idCategory")

  /// Nama kategori (mis. Food, Transport, Salary)
  name        String   @map("name")

  /// Optional: kategori milik user tertentu; jika null → kategori global
  idUser      Int?     @map("idUser")
  owner       User?    @relation("UserCategories", fields: [idUser], references: [idUser])

  /// Relasi ke transaksi/budget
  transactions Transaction[]
  budgets      Budget[]

  createdAt   DateTime @default(now()) @map("createdAt")

  @@index([idUser], map: "idx_category_user")
  @@map("Category")
}

model Transaction {
  idTransaction Int       @id @default(autoincrement()) @map("idTransaction")

  /// FK → User
  idUser        Int       @map("idUser")
  user          User      @relation(fields: [idUser], references: [idUser])

  /// FK → Category (boleh null jika uncategorized)
  idCategory    Int?      @map("idCategory")
  category      Category? @relation(fields: [idCategory], references: [idCategory])

  /// Detail transaksi
  type          String    @map("type")                  // "income" | "expense" (atau bebas)
  amount        Decimal   @db.Numeric(18, 2) @map("amount")
  description   String?   @map("description")
  date          DateTime  @map("date")
  source        String?   @map("source")                // cash, bank, e-wallet, dsb.

  createdAt     DateTime  @default(now())  @map("createdAt")
  updatedAt     DateTime  @updatedAt       @map("updatedAt")

  @@index([idUser, date], map: "idx_tx_user_date")
  @@index([idCategory], map: "idx_tx_category")
  @@map("Transaction")
}

model Budget {
  idBudget     Int       @id @default(autoincrement()) @map("idBudget")

  /// FK → User (pemilik budget)
  idUser      Int        @map("idUser")
  user        User       @relation(fields: [idUser], references: [idUser])

  /// FK → Category (boleh null untuk "overall budget")
  idCategory  Int?       @map("idCategory")
  category    Category?  @relation(fields: [idCategory], references: [idCategory])

  /// Periode & batas
  periodStart DateTime   @map("periodStart")
  periodEnd   DateTime   @map("periodEnd")
  amount      Decimal    @db.Numeric(18, 2) @map("amount")

  createdAt   DateTime   @default(now()) @map("createdAt")

  @@index([idUser, periodStart, periodEnd], map: "idx_budget_user_period")
  @@index([idCategory], map: "idx_budget_category")
  @@map("Budget")
}

model Notification {
  idNotification Int      @id @default(autoincrement()) @map("idNotification")

  /// FK → User
  idUser        Int       @map("idUser")
  user          User      @relation(fields: [idUser], references: [idUser])

  /// Konten notifikasi
  type          String    @map("type")                  // mis: "BUDGET_NEAR_LIMIT"
  read          Boolean   @default(false) @map("read")
  message       String?   @map("message")

  createdAt     DateTime  @default(now()) @map("createdAt")

  @@index([idUser, read], map: "idx_notification_user_read")
  @@map("Notification")
}

model Report {
  idReport   Int      @id @default(autoincrement()) @map("idReport")

  /// FK → User
  idUser     Int      @map("idUser")
  user       User     @relation(fields: [idUser], references: [idUser])

  /// tipe & periode
  type       String?  @map("type")       // "monthly" | "summary" | dsb.
  month      Int?     @map("month")      // 1..12 (untuk monthly report)
  year       Int?     @map("year")       // 4-digit year

  read       Boolean  @default(false) @map("read")
  createdAt  DateTime @default(now()) @map("createdAt")

  @@index([idUser, year, month], map: "idx_report_user_period")
  @@map("ReportService")    // <-- ganti ke "MonthlyReport" jika kamu sudah punya tabel itu
}